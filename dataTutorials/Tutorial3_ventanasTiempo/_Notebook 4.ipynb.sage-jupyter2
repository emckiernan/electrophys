{"type":"settings","kernel":"anaconda3","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.4"}},"kernel_usage":{"cpu":0,"memory":87298048},"kernel_state":"idle"}
{"type":"cell","id":"324776","pos":12,"input":"### ¿qué pasa si ahora primero filtramos las amplitudes y después obtenemos la varianza?","cell_type":"markdown"}
{"type":"cell","id":"887154","pos":14,"input":"\nplt.plot(variance_single_chan_wind(WD2,50000),\"--\")\nplt.plot(variance_single_chan_wind(WD2,50000),\".\")","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fb9607ae748>]"},"output_type":"execute_result","exec_count":10},"1":{"data":{"image/png":"9f133d976802f1783e19fdef7698fd330f474194"},"metadata":{"image/png":{"height":413,"width":731}}}},"cell_type":"code","exec_count":10}
{"type":"cell","id":"7f8ed8","pos":0,"input":"# Notebook 4","cell_type":"markdown"}
{"type":"cell","id":"463ec3","pos":1,"input":"import matplotlib.pyplot as plt\nimport numpy as np\nimport wave\nimport pandas as pd\nimport scipy as sc","cell_type":"code","exec_count":1}
{"type":"cell","id":"b6caed","pos":2,"input":"record1 = wave.open('../Notebook_2/Dec0.wav', 'r') \nframes = record1.readframes(-1) \nwaveData = np.fromstring(frames, 'Int16')\n\nnumChannels = record1.getnchannels() #número de canales\nsampleRate = record1.getframerate()  #frecuencia de muestreo\nsampleWidth = record1.getsampwidth()\nnumFrames = record1.getnframes() \n\ntiempo = np.arange(0,len(waveData))/(sampleRate)","cell_type":"code","exec_count":2}
{"type":"cell","id":"e5e366","pos":3,"input":"### Coloca los datos en ventanas de tiempo con un número de puntos definidos por el usuario","cell_type":"markdown"}
{"type":"cell","id":"e83193","pos":4,"input":"def single_chan_wind(x,npoints):\n    \n    single_chan_wind = []\n    tot_points = len(x)\n    L = npoints\n    nwind = tot_points//npoints\n    \n    for h in range(0,nwind):\n        \n        t = x[h*L:L*(1+h)]\n        single_chan_wind.append(t)\n        \n    return(single_chan_wind)","cell_type":"code","exec_count":3}
{"type":"cell","id":"346cda","pos":5,"input":"#### Aplicamos la función anterior a los datos, eligiendo ventanas de tiempo que contengan 100000 datos cada una:","cell_type":"markdown"}
{"type":"cell","id":"f9e94c","pos":6,"input":"wind_waveData = single_chan_wind(waveData,50000)","cell_type":"code","exec_count":4,"scrolled":true}
{"type":"cell","id":"1e2de4","pos":7,"input":"#la función generó 27 ventanas, cada una con 100000 datos:\nnp.shape(wind_waveData)","output":{"0":{"data":{"text/plain":"(55, 50000)"},"output_type":"execute_result","exec_count":5}},"cell_type":"code","exec_count":5,"scrolled":true}
{"type":"cell","id":"8c4798","pos":8,"input":"50000/sampleRate # Cada ventana de tiempo equivale a 1.1338 s aproximadamente","output":{"0":{"data":{"text/plain":"1.1337868480725624"},"output_type":"execute_result","exec_count":6}},"cell_type":"code","exec_count":6}
{"type":"cell","id":"214f70","pos":9,"input":"### La siguiente función, obtiene la varianza en ventanas de tiempo para una señal:","cell_type":"markdown"}
{"type":"cell","id":"d47189","pos":10,"input":"def variance_single_chan_wind(x,npoints):\n    \n    tot_points = len(x) #número total de puntos en el registro\n    nwind = tot_points//npoints #hace un cociente para obtener el número de ventanas de tiempo\n    wind_x = single_chan_wind(x,npoints) #Llama a la función para reacomodar los datos en ventanas de tiempo\n    \n    v_single_chan_wind = [np.var(wind_x[w]) for w in range(0,nwind)] #Obtiene la varianza de cada una de las ventanas de tiempo anteriores.\n    \n    return(v_single_chan_wind)","cell_type":"code","exec_count":7,"scrolled":true}
{"type":"cell","id":"e4833b","pos":11,"input":"plt.plot(variance_single_chan_wind(waveData,50000)/max(variance_single_chan_wind(waveData,50000)))","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fb961031668>]"},"output_type":"execute_result","exec_count":8},"1":{"data":{"image/png":"9cf4cf2bfe89847bb38b5e221c053013317f6371"},"metadata":{"image/png":{"height":413,"width":708}}}},"cell_type":"code","exec_count":8}
{"type":"cell","id":"bcf390","pos":13,"input":"WD2 = np.copy(waveData)\nnp.place(WD2, np.absolute(WD2)<(10000),0)\nplt.plot(tiempo, WD2)","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fb96075e1d0>]"},"output_type":"execute_result","exec_count":9},"1":{"data":{"image/png":"533c5325c44cf25a778518a8758c3c80eba08f4f"},"metadata":{"image/png":{"height":413,"width":733}}}},"cell_type":"code","exec_count":9}
{"type":"file","last_load":1511833584694}