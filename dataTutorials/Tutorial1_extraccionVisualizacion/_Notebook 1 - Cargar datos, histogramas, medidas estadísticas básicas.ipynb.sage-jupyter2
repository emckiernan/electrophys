{"type":"cell","id":"fa984a","pos":6,"input":"### Graficar datos\nGraficaremos los datos anteriores en la escala de tiempo obtenida utilizando pyplot","cell_type":"markdown"}
{"type":"cell","id":"b07b5c","pos":11,"input":"sc.stats.describe(normal)","output":{"0":{"data":{"text/plain":"DescribeResult(nobs=11000, minmax=(0.0, 140.0916464563187), mean=47.076576774272489, variance=393.67566905690251, skewness=0.572291995434054, kurtosis=0.49240524972245137)"},"output_type":"execute_result","exec_count":56}},"cell_type":"code","exec_count":56}
{"type":"cell","id":"f28fc5","pos":12,"input":"\nsc.stats.describe(anormal)","output":{"0":{"data":{"text/plain":"DescribeResult(nobs=11000, minmax=(0.0, 230.39251137119697), mean=105.51251483577066, variance=1727.1546184254876, skewness=0.38207109370427106, kurtosis=0.05934514621433529)"},"output_type":"execute_result","exec_count":54}},"cell_type":"code","exec_count":54}
{"type":"cell","id":"7dfd0d","pos":8,"input":"### Histograma de las amplitudes\nHay distintas formas de obtener un histograma de amplitudes de una señal, para este caso, usaremos la paquetería $\\textbf{Seaborn}$ https://seaborn.pydata.org y el comando $\\textit{distplot}$, el cual genera un histograma de los datos y ajusta una distribución a los mismos:","cell_type":"markdown"}
{"exec_count":3,"start":1512010740965,"input":"tiempo = np.arange(0,len(normal))*(1/256)  #arange hace un arreglo con números enteros desde cero hasta el tamaño de la serie de tiempo\n                                           #cada uno de los elementos de este arreglo se multiplica por .256 seg para obtener la escala de\n                                           #tiempo adecuada","state":"done","pos":5,"cell_type":"code","type":"cell","end":1512010740967,"id":"84a471","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f2d7d650c88>"},"exec_count":5},"1":{"metadata":{"image/png":{"width":721,"height":413}},"data":{"image/png":"69566aebf4a5999737d5fd49baec48126e8c4113"}}},"exec_count":5,"start":1512010766846,"input":"sns.distplot(normal,  #array del cual se obtendrá el histograma\n            bins =100, #número de columnas del histograma\n            kde=False,  #oculta la función de densidad de probabilidad estimada\n            norm_hist=True #normaliza el histograma\n            )\n\nsns.distplot(anormal,\n            bins =30,\n            kde=True,\n            norm_hist=True\n            )","state":"done","pos":9,"cell_type":"code","type":"cell","end":1512010768287,"id":"584909","kernel":"anaconda3"}
{"exec_count":2,"start":1512010739788,"input":"normal = np.genfromtxt(\"./testdata1\", delimiter=\",\")\n\nanormal = np.genfromtxt(\"./testdata2\", delimiter=\",\")","state":"done","pos":3,"cell_type":"code","type":"cell","end":1512010739882,"id":"b181be","kernel":"anaconda3"}
{"type":"cell","id":"ae27ee","pos":4,"input":"Los datos de ejemplo fueron obtenidos en una frecuencia de muestreo de 256 Hz ie. un dato cada $\\frac{1}{256} s$ , por eso necesitamos tener una escala de tiempo adecuada:","cell_type":"markdown"}
{"type":"file","last_load":1511800348431}
{"type":"cell","id":"a72517","pos":2,"input":"## Apertura de archivos\nPara empezar, es necesario abrir los datos obtenidos experimentalmente, la forma de abrirlos depende de la extensión en la que estos estén guardados, en este caso abriremos los datos de ejemplo, que tienen una extensión .csv, para eso utilizaremos la paquetería de Python $\\textbf{numpy}$ y de ella, el comando $\\textit{genfromtext}$ (los detalles de este comando están en: https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.genfromtxt.html).","cell_type":"markdown"}
{"type":"settings","kernel":"anaconda3","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.4"}},"kernel_state":"idle","kernel_usage":{"cpu":0,"memory":183222272}}
{"output":{"0":{"metadata":{"image/png":{"width":1577,"height":776}},"data":{"image/png":"98723a2479f1ae7f9c7ef4709e5dc017339ca034"}}},"exec_count":4,"start":1512010742957,"input":"fig = plt.figure(figsize=(8, 4), dpi=200)\n\n\nax = fig.add_subplot(2, 1, 1) #primer figura en un arreglo de dos renglones y una columna\nax.plot(tiempo,normal,marker='.',ms=.01,lw=1.1)\nax.set_ylabel('Amplitud')\n\nax = fig.add_subplot(2, 1, 2) #segunda figura en un arreglo de dos renglones y una columna\nax.plot(tiempo,anormal,marker='.',ms=.01,lw=1.1)\nax.set_ylabel('Amplitud')\nax.set_xlabel('Tiempo [s]')\n\nplt.tight_layout() #Hace que las gráficas y los textos no se sobrepongan.\n\nplt.show()","state":"done","pos":7,"cell_type":"code","type":"cell","end":1512010746267,"id":"a307aa","kernel":"anaconda3"}
{"exec_count":1,"start":1512010737343,"input":"import numpy as np \nimport seaborn as sns  #Paquetería para visualización de datos\nfrom scipy import stats as st #Paquetería de computación estadísitica de scipy\nimport matplotlib.pyplot as plt","state":"done","pos":1,"cell_type":"code","type":"cell","end":1512010739281,"id":"331057","kernel":"anaconda3"}
{"type":"cell","id":"5593eb","pos":0,"input":"# Tutorial. Extracción y visualización inicial de datos. \n### Noel Isaías Placencia-Díaz, Marco Arieli Herrera-Valdez,\n### Facultad de Ciencias, UNAM\n\nEl análisis de datos biológicos ocurre a menudo de forma iterativa, explorando, luego generalizando, y de regreso a la exploración. Una de las primeras exploraciones es la de extraer los datos de sus archivos producidos en el formato original de adquisición, y la visualización de los contenidos de los archivos. Este tutorial cubre ejemplos básicos de como abrir archivos con formato de texto separado por comas, una exploración visual básica de los mismos.\n\n\nLos primeros pasos para analizar computacionalmente datos en series de tiempo son:\n\n1) Abrir los datos (aunque suene obvio, esto puede tomar su tiempo).\n\n2) Graficar los datos.\n\nEs recomendable graficar los datos $\\textbf{siempre}$ antes de manipularlos de alguna otra forma, pues esto nos permite saber cual es su estructura y elegir un algoritmo de análisis adecuado. Los dos pasos anteriores son descritos en los párrafos siguientes. \n\n\n","cell_type":"markdown"}
{"type":"cell","id":"c72903","pos":10,"input":"### Descripción estadística\nEs posible obtener medidas estadísticas básicas de manera rápida usando el siguiente comando:","cell_type":"markdown"}